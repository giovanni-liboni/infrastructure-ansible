---
- name: Ensure Bitwarden Directory Exist
  file:
    path: "{{project_directory}}/bitwarden"
    state: directory
    owner: "root"
    group: "root"
  tags: bitwarden

- name: Ensure Bitwarden Configuration Files Exist
  template:
    src: config.json.j2
    dest: "{{project_directory}}/bitwarden/config.json"
  notify: restart bitwarden
  tags: bitwarden
  no_log: true

- name: Ensure Bitwarden Logrotate Files Exist
  template:
    src: logrotate_bitwarden.j2
    dest: "{{project_directory}}/bitwarden/logrotate_bitwarden"
  notify: restart bitwarden
  tags: bitwarden
  no_log: true

- name: Create Bitwarden Docker Container
  community.general.docker_container:
    name: bitwarden
    image: "vaultwarden/server:{{bitwarden_version}}"
    pull: yes
    hostname: bitwarden
    container_default_behavior: compatibility
    network_mode: default
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: stopped
    env:
      WEBSOCKET_ENABLED: "true"
      SIGNUPS_ALLOWED: "false"
      ADMIN_TOKEN: "{{bitwarden_admin_token}}"
      SMTP_HOST: "{{smtp_server}}"
      SMTP_FROM: "{{smtp_sender}}"
      SMTP_PORT: "{{smtp_port}}"
      SMTP_SSL: "true"
      SMTP_USERNAME: "{{smtp_user}}"
      SMTP_PASSWORD: "{{smtp_password}}"
      LOG_FILE: "/data/bitwarden.log"
      LOG_LEVEL: "warn" # Still allows Fail2Ban to work properly
    volumes:
      - "{{project_directory}}/bitwarden:/data"
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      traefik.http.routers.bitwarden.entrypoints: "websecure"
      traefik.http.routers.bitwarden.tls: "true"
      traefik.http.routers.bitwarden.rule: "Host(`vault.{{domain_tld}}`)"
      traefik.http.middlewares.bitwarden_rewrite_theme.plugin.rewritebody.rewrites.regex: "</head>"
      traefik.http.middlewares.bitwarden_rewrite_theme.plugin.rewritebody.rewrites.replacement: "<link rel=stylesheet type=text/css href=https://gilbn.github.io/theme.park/CSS/themes/bitwarden/{{theme_park_default}}.css></head>"
      traefik.http.routers.bitwarden.middlewares: "authelia@docker,bitwarden_rewrite_theme"
      traefik.http.routers.bitwarden.service: "bitwarden"
      traefik.http.services.bitwarden.loadbalancer.server.port: "80"
      traefik.http.routers.bitwarden.priority: "2"
      # Bitwarden send service free to access from external without auth
      traefik.http.routers.bitwarden-send-https.rule: "Host(`vault.{{domain_tld}}`) && Path(`/send`)"
      traefik.http.routers.bitwarden-send-https.entrypoints: "websecure"
      traefik.http.routers.bitwarden-send-https.tls: "true"
      traefik.http.routers.bitwarden-send-https.service: "bitwarden-send"
      traefik.http.services.bitwarden-send.loadbalancer.server.port: "80"
      traefik.http.routers.bitwarden-send-https.priority: "1"

      traefik.http.routers.bitwarden-websocket-https.rule: "Host(`vault.{{domain_tld}}`) && Path(`/notifications/hub`)"
      traefik.http.routers.bitwarden-websocket-https.entrypoints: "websecure"
      traefik.http.routers.bitwarden-websocket-https.tls: "true"
      traefik.http.routers.bitwarden-websocket-https.service: "bitwarden-websocket"
      traefik.http.services.bitwarden-websocket.loadbalancer.server.port: "3012"
      traefik.enable: "true"
  tags: bitwarden